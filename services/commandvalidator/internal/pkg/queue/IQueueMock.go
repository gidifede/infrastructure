// Code generated by MockGen. DO NOT EDIT.
// Source: ./iQueue.go

// Package queue is a generated GoMock package.
package queue

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIQeueu is a mock of IQeueu interface.
type MockIQeueu struct {
	ctrl     *gomock.Controller
	recorder *MockIQeueuMockRecorder
}

// MockIQeueuMockRecorder is the mock recorder for MockIQeueu.
type MockIQeueuMockRecorder struct {
	mock *MockIQeueu
}

// NewMockIQeueu creates a new mock instance.
func NewMockIQeueu(ctrl *gomock.Controller) *MockIQeueu {
	mock := &MockIQeueu{ctrl: ctrl}
	mock.recorder = &MockIQeueuMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIQeueu) EXPECT() *MockIQeueuMockRecorder {
	return m.recorder
}

// SendMsg mocks base method.
func (m *MockIQeueu) SendMsg(ctx context.Context, queueURL, body, nmessageGroup string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendMsg", ctx, queueURL, body, nmessageGroup)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendMsg indicates an expected call of SendMsg.
func (mr *MockIQeueuMockRecorder) SendMsg(ctx, queueURL, body, nmessageGroup interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsg", reflect.TypeOf((*MockIQeueu)(nil).SendMsg), ctx, queueURL, body, nmessageGroup)
}
