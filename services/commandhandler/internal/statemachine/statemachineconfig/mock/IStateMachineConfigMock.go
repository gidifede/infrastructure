// Code generated by MockGen. DO NOT EDIT.
// Source: ./IStateMachineConfig.go

// Package mock_stateMachineConfig is a generated GoMock package.
package mockstatemachineconfig

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIStateMachineConfig is a mock of IStateMachineConfig interface.
type MockIStateMachineConfig struct {
	ctrl     *gomock.Controller
	recorder *MockIStateMachineConfigMockRecorder
}

// MockIStateMachineConfigMockRecorder is the mock recorder for MockIStateMachineConfig.
type MockIStateMachineConfigMockRecorder struct {
	mock *MockIStateMachineConfig
}

// NewMockIStateMachineConfig creates a new mock instance.
func NewMockIStateMachineConfig(ctrl *gomock.Controller) *MockIStateMachineConfig {
	mock := &MockIStateMachineConfig{ctrl: ctrl}
	mock.recorder = &MockIStateMachineConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStateMachineConfig) EXPECT() *MockIStateMachineConfigMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIStateMachineConfig) Get(arg0 context.Context) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIStateMachineConfigMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIStateMachineConfig)(nil).Get), arg0)
}
